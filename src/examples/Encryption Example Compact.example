/*
 * copyright: 2014
 * name : mhogo mchungu
 * email: mhogomchungu@gmail.com
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "crypt.h"
#include <stdlib.h>
#include <string.h>
#include <stdio.h>

int main(int argc,char * argv[]){
	//VARS
	char * encrypt_handle = NULL;
	char * decrypt_handle = NULL;
	result encrypt_result;
	result decrypt_result;
	const char * data_to_encrypt = "This is an encryption test";
	size_t data_to_encrypt_length = strlen(data_to_encrypt);
	const char * password = "xxx" ;
	size_t password_length = strlen(password);
	const char * decrypted_data ;
	size_t decrypted_data_size ;
	const char * encrypted_data ;
	size_t encryped_data_size ;
	//ENCRYPT returns encrypted_data
	if(encrypt(&encrypt_handle,data_to_encrypt,data_to_encrypt_length,password,password_length,&encrypt_result)){
		encrypted_data = encrypt_result.buffer;
		encryped_data_size = encrypt_result.length;
	}else{puts("data encryption failed");}
	//DECRYPT returns decrypted_data
	if(decrypt(&decrypt_handle,encrypted_data,encryped_data_size,password,password_length,&decrypt_result)){
		decrypted_data = decrypt_result.buffer;
		decrypted_data_size = decrypt_result.length;
	}else{puts("data decryption failed");}
}
